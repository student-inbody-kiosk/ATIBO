# Generated by Django 4.2.3 on 2023-07-25 08:39

import atibo.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('students', '0002_attendance'),
    ]

    operations = [
        migrations.CreateModel(
            name='Inbody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_date', models.DateField()),
                ('weight', models.FloatField()),
                ('percent_body_fat', models.FloatField()),
                ('skeletal_muscle_mass', models.FloatField()),
                ('height', models.FloatField(null=True)),
                ('age', atibo.fields.TinyIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1, 'The grade must be greater than 0'), django.core.validators.MaxValueValidator(127, 'The grade must be less than 127')])),
                ('total_body_water', models.FloatField(null=True)),
                ('protein', models.FloatField(null=True)),
                ('minerals', models.FloatField(null=True)),
                ('body_fat_mass', models.FloatField(null=True)),
                ('bobdy_mass_index', models.FloatField(null=True)),
                ('score', atibo.fields.TinyIntegerField(null=True, validators=[django.core.validators.MinValueValidator(1, 'The grade must be greater than 0'), django.core.validators.MaxValueValidator(100, 'The grade must be less than 100')])),
            ],
        ),
        migrations.AddIndex(
            model_name='attendance',
            index=models.Index(fields=['student', 'date_attended'], name='attendance_student_idx'),
        ),
        migrations.AddField(
            model_name='inbody',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student'),
        ),
        migrations.AddIndex(
            model_name='inbody',
            index=models.Index(fields=['student', 'test_date'], name='student_test_date_idx'),
        ),
        migrations.AddConstraint(
            model_name='inbody',
            constraint=models.UniqueConstraint(fields=('student', 'test_date'), name='test_per_day'),
        ),
    ]
